<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
		<ImplicitUsings>enable</ImplicitUsings>
		<AssemblyName>CommunAxiom.Commons.ClientUI.Server</AssemblyName>
		<RootNamespace>CommunAxiom.Commons.ClientUI.Server</RootNamespace>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(RunConfiguration)' == 'Client' " />
	<ItemGroup>
		<PackageReference Include="Blazorise" Version="1.0.6" />
		<PackageReference Include="Blazorise.Bulma" Version="1.0.6" />
		<PackageReference Include="Blazorise.Icons.FontAwesome" Version="1.0.6" />
		<PackageReference Include="Blazorise.TreeView" Version="1.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.8">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>

		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
		<PackageReference Include="ElectronNET.API" Version="13.5.1" />
		<PackageReference Include="IdentityModel.OidcClient" Version="5.0.2" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.8" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.8" />
		<PackageReference Include="Microsoft.Orleans.Core" Version="3.6.5" />
		<PackageReference Include="Microsoft.Orleans.OrleansRuntime" Version="3.6.5" />
		<PackageReference Include="Microsoft.Extensions.Options" Version="6.0.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.1" />
		<PackageReference Include="OpenIddict.Abstractions" Version="3.1.1" />
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
		<Content Remove="Ressources\MainMenu-en.json" />
		<Content Remove="Ressources\MainMenu-fr.json" />
	</ItemGroup>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
	<ItemGroup>
		<ProjectReference Include="..\ClientUI.Components\ClientUI.Components.csproj" />
		<ProjectReference Include="..\ClientUI.Shared\ClientUI.Shared.csproj" />
		<ProjectReference Include="..\ClusterClient\ClusterClient.csproj" />
		<ProjectReference Include="..\Contracts\Contracts.csproj" />
	
	</ItemGroup>
  <ItemGroup>
    <Content Update="electron.manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>